#!/bin/bash
convert_cpu_to_millicores() {
    local value=$1
    if [[ $value == *m ]]; then
        echo "${value::-1}"
    else
        echo "$((value * 1000))"
    fi
}

deployments=$(kubectl get deployments --all-namespaces -o json)

hpas=$(kubectl get hpa --all-namespaces -o json)

echo "Deployment Name,Namespace,CPU Requests,CPU Limits,MEM Requests,MEM Limits,Min HPA,Max HPA,Current Replicas,Max CPU Usage,Max MEM Usage" > deployment_info.csv

echo "$deployments" | jq -c '.items[]' | while read -r deployment; do
    name=$(echo "$deployment" | jq -r '.metadata.name')
    namespace=$(echo "$deployment" | jq -r '.metadata.namespace')

    cpu_requests=$(echo "$deployment" | jq -r '.spec.template.spec.containers[]?.resources.requests.cpu // empty' | while read -r cpu; do convert_cpu_to_millicores "$cpu"; done | paste -sd+ - | bc)
    cpu_limits=$(echo "$deployment" | jq -r '.spec.template.spec.containers[]?.resources.limits.cpu // empty' | while read -r cpu; do convert_cpu_to_millicores "$cpu"; done | paste -sd+ - | bc)
    mem_requests=$(echo "$deployment" | jq -r '.spec.template.spec.containers[]?.resources.requests.memory // empty' | paste -sd+ - | bc)
    mem_limits=$(echo "$deployment" | jq -r '.spec.template.spec.containers[]?.resources.limits.memory // empty' | paste -sd+ - | bc)

    hpa=$(echo "$hpas" | jq -r --arg name "$name" --arg namespace "$namespace" '.items[] | select(.metadata.namespace == $namespace and .spec.scaleTargetRef.name == $name)')
    min_hpa=$(echo "$hpa" | jq -r '.spec.minReplicas // "N/A"')
    max_hpa=$(echo "$hpa" | jq -r '.spec.maxReplicas // "N/A"')

    current_replicas=$(echo "$deployment" | jq -r '.status.replicas // "N/A"')

    max_cpu_usage=0
    max_mem_usage=0

    kubectl top pods --namespace="$namespace" --selector="app=$name" --no-headers | while read -r pod; do
        cpu_usage=$(echo "$pod" | awk '{print $2}' | tr -d 'm')
        mem_usage=$(echo "$pod" | awk '{print $3}' | tr -d 'Mi')

        if [ "$cpu_usage" -gt "$max_cpu_usage" ]; then
            max_cpu_usage=$cpu_usage
        fi

        if [ "$mem_usage" -gt "$max_mem_usage" ]; then
            max_mem_usage=$mem_usage
        fi
    done

    echo "$name,$namespace,$cpu_requests,$cpu_limits,$mem_requests,$mem_limits,$min_hpa,$max_hpa,$current_replicas,$max_cpu_usage,$max_mem_usage" >> deployment_info.csv
done
